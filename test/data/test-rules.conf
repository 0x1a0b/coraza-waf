SecRequestBodyAccess On

SecRule &ARGS "@gt 0" "id:1, phase: 1, pass, log"

#Rule 10 should be skipped because of the secmarker
SecRule UNCONDITIONAL_MATCH "" "id:9, phase: 1, pass, log, skipAfter:please-skip-bro"
SecRule UNCONDITIONAL_MATCH "" "id: 10, phase: 1, pass, log"
SecMarker "please-skip-bro"

# Rule 11 should work
SecRule UNCONDITIONAL_MATCH "" "id: 11, phase: 1, pass, log, initcol:ip=127.0.0.1, setvar:ip.test=aaa"

# Now we test collections
SecRule UNCONDITIONAL_MATCH "" "id:20, phase:1, pass, log, setvar:tx.test=1234"
SecRule UNCONDITIONAL_MATCH "" "id:21, phase:1, pass, log, setvar:tx.test2=%{tx.test}"
SecRule TX:test "1234" "id:30, phase:1, pass, log" 
SecRule TX:test2 "1234" "id:31, phase:1, pass, log" 
SecRule TX:test2 "@within 1234 12345 1234567" "id:32, phase:1, pass, log" 
SecRule TX:test2 "!@within 45235234 6436427 124123" "id:33, phase:1, pass, log" 

# Test Negation
SecRule TX:test "!@eq 12345" "id:40, phase:1, pass, log" 
SecRule TX:test "!@within aaa bbb ccc ddd" "id:41, phase:1, pass, log" 

# Test transformations
SecRule TX:test "@eq 4" "id:50, phase:1, pass, log, t:length" 
SecRule TX:test "@eq 5" "id:51, phase:1, pass, log, t:length" 

# Test Chains
SecRule TX:test "@eq 4" "id:200, phase:1, pass, log, t:length, chain"
	SecRule TX:test "@eq 4"  ""
SecRule TX:test "@eq 4" "id:201, phase:1, pass, log, t:length, chain"
	SecRule TX:test "@gt 2"  ""
SecRule TX:test "@eq 4" "id:202, phase:1, pass, log, t:length, chain"
	SecRule TX:test "@gt 2"  "chain"
		SecRule TX:test "@gt 3"  ""
SecRule TX:test "@eq 4" "id:203, phase:1, pass, log, t:length, chain"
	SecRule TX:test "@gt 2"  "chain"
		SecRule TX:test "@eq 5"  ""
SecRule TX:test "@eq 5" "id:204, phase:1, pass, log, t:length, chain"
	SecRule TX:test "@gt 2"  "chain"
		SecRule TX:test "@eq 5"  ""


SecRule ARGS|!ARGS:bar "!@eq asdf" "id:300, phase:1, pass, log"

SecRule IP:test "aaa" "id: 400, phase: 2, pass, log"
SecRule IP:test "bbb" "id: 401, phase: 2, pass, log"


SecRule UNCONDITIONAL_MATCH "" "id:500, phase:2,ctl:ruleRemoveById=501"
SecRule UNCONDITIONAL_MATCH "" "id:501, phase:2,log"
SecRule UNCONDITIONAL_MATCH "" "id:502, phase:2,ctl:ruleRemoveTargetById=503;TX:test"
# The next rule shouldn't match because of the previous ctl
SecRule TX:test "1234" "id:503, phase:2,log"

SecRule XML:/*|XML://@* "test123" "id:601, phase:2,log"
